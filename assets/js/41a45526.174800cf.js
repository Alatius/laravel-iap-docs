"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[706],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(r),f=o,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||i;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6126:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const i={sidebar_position:2,description:"App Store server notifications guide"},a="App Store Server Notifications",s={unversionedId:"server-notifications/app-store",id:"server-notifications/app-store",title:"App Store Server Notifications",description:"App Store server notifications guide",source:"@site/docs/server-notifications/app-store.mdx",sourceDirName:"server-notifications",slug:"/server-notifications/app-store",permalink:"/laravel-iap-docs/docs/server-notifications/app-store",draft:!1,editUrl:"https://github.com/imdhemy/laravel-iap-docs/blob/master/docs/server-notifications/app-store.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"App Store server notifications guide"},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/laravel-iap-docs/docs/server-notifications/overview"},next:{title:"Google Play RTDN",permalink:"/laravel-iap-docs/docs/server-notifications/google-play"}},p={},c=[],l={toc:c};function d(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"app-store-server-notifications"},"App Store Server Notifications"),(0,o.kt)("p",null,"App Store Server Notifications should be set up in App Store Connect with\nthe URL provided by LIAP. Refer to ",(0,o.kt)("a",{parentName:"p",href:"/docs/get-started/routing#generate-a-signed-url"},"Generating signed URLs")," to\nlearn how to\ngenerate this URL."),(0,o.kt)("p",null,"The generated URL will something like this:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"https://<your-site>/liap/notifications?provider=app-store"),"."),(0,o.kt)("p",null,"Based on your configuration, it may be altered to include the ",(0,o.kt)("inlineCode",{parentName:"p"},"signature"),"\nand other\n",(0,o.kt)("a",{parentName:"p",href:"/docs/get-started/routing"},"routing")," parameters."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Generate app store URL."),(0,o.kt)("li",{parentName:"ol"},"Log in to ",(0,o.kt)("a",{parentName:"li",href:"https://appstoreconnect.apple.com"},"App Store Connect")," and select your app."),(0,o.kt)("li",{parentName:"ol"},"Under the ",(0,o.kt)("strong",{parentName:"li"},"App Information")," > ",(0,o.kt)("strong",{parentName:"li"},"App Store Server Notifications")," section,\npaste\nthe URL you generated in step 1 in both the ",(0,o.kt)("strong",{parentName:"li"},"Production Server URL")," and the\n",(0,o.kt)("strong",{parentName:"li"},"Sandbox Server URL")," fields."),(0,o.kt)("li",{parentName:"ol"},"Select Version 1 Notifications. ",(0,o.kt)("strong",{parentName:"li"},"(Version 2 notifications are not\nsupported yet.)"))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"App Store Server Notifications",src:r(7078).Z,width:"835",height:"627"})),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If your server requires IP addresses to be on an allow list,\nadd the IP address subnet 17.0.0.0/8 to allow your server to receive notifications\nfrom the App Store server. This subnet applies to both the sandbox and the production environments")))}d.isMDXComponent=!0},7078:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/app-store-screenshot-79e8f3af8e35d0f03d0e86c4f4978b7b.png"}}]);