"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[599],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(h,l(l({ref:t},d),{},{components:n})):a.createElement(h,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:4,description:"List of available events"},l="Available Events",o={unversionedId:"server-notifications/event-list",id:"server-notifications/event-list",title:"Available Events",description:"List of available events",source:"@site/docs/server-notifications/event-list.mdx",sourceDirName:"server-notifications",slug:"/server-notifications/event-list",permalink:"/laravel-iap-docs/docs/server-notifications/event-list",draft:!1,editUrl:"https://github.com/imdhemy/laravel-iap-docs/blob/master/docs/server-notifications/event-list.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"List of available events"},sidebar:"tutorialSidebar",previous:{title:"Google Play RTDN",permalink:"/laravel-iap-docs/docs/server-notifications/google-play"},next:{title:"Credentials",permalink:"/laravel-iap-docs/docs/category/credentials"}},s={},p=[{value:"App Store Events",id:"app-store-events",level:2},{value:"Google Play Events",id:"google-play-events",level:2},{value:"How to track refunds in Google Play",id:"how-to-track-refunds-in-google-play",level:3}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"available-events"},"Available Events"),(0,r.kt)("p",null,"This is a list of all supported events triggered by Liap once a server\nnotification is received. Each event is documented below, and you can follow\nthis guide to learn ",(0,r.kt)("a",{parentName:"p",href:"/docs/get-started/event-listeners"},"how to use them"),"."),(0,r.kt)("h2",{id:"app-store-events"},"App Store Events"),(0,r.kt)("admonition",{title:"Caution :::",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Till now Liap only supports ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/appstoreservernotifications/notification_type"},"v.1 notifications")," from the App Store. V.2 will\nbe supported in the next release.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Namespace"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Cancel"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\Cancel")),(0,r.kt)("td",{parentName:"tr",align:null},"Apple support cancelled the auto-renewable subscription and the user received a refund.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Consumption request"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\ConsumptionRequest")),(0,r.kt)("td",{parentName:"tr",align:null},"The customer initiated a refund request for a consumable in-app purchase, and the App Store is requesting that you provide consumption data.Apple support requested the user to consume the product.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Did change renewal pref"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\DidChangeRenewalPref")),(0,r.kt)("td",{parentName:"tr",align:null},"The customer made a change in their subscription plan that takes effect at the next renewal. The currently active plan isn\u2019t affected.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Did change renewal status"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\DidChangeRenewalStatus")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates a change in the subscription renewal status.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Did fail to renew"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\DidFailToRenew")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates a subscription that failed to renew due to a billing issue.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Did recover"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\DidRecover")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates a successful automatic renewal of an expired subscription that failed to renew in the past.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Did renew"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\DidRenew")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates that a customer\u2019s subscription has successfully auto-renewed for a new transaction period.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Initial buy"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\InitialBuy")),(0,r.kt)("td",{parentName:"tr",align:null},"Occurs at the user\u2019s initial purchase of the subscription.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Interactive renewal"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\InteractiveRenewal")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates the customer renewed a subscription interactively, either by using your app\u2019s interface, or on the App Store in the account\u2019s Subscriptions settings.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Price increase consent"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\PriceIncreaseConsent")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates that the App Store has started asking the customer to consent to your app\u2019s auto-renewable subscription price increase that requires consent.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Refund"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\Refund")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates that the App Store successfully refunded a transaction for a consumable in-app purchase, a non-consumable in-app purchase, or a non-renewing subscription.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Revoke"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\Revoke")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates that an in-app purchase the user was entitled to through Family Sharing is no longer available through sharing.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("del",{parentName:"td"},"Renewal")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\AppStore\\Renewal")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"DEPRECATED")," Use ",(0,r.kt)("strong",{parentName:"td"},"Did recover")," instead.")))),(0,r.kt)("h2",{id:"google-play-events"},"Google Play Events"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Namespace"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription recovered"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionRecovered")),(0,r.kt)("td",{parentName:"tr",align:null},"A subscription was recovered from account hold.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription renewed"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionRenewed")),(0,r.kt)("td",{parentName:"tr",align:null},"An active subscription was renewed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription canceled"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionCanceled")),(0,r.kt)("td",{parentName:"tr",align:null},"A subscription was either voluntarily or involuntarily cancelled. For voluntary cancellation, sent when the user cancels.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription purchased"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionPurchased")),(0,r.kt)("td",{parentName:"tr",align:null},"A new subscription was purchased.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription on hold"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionOnHold")),(0,r.kt)("td",{parentName:"tr",align:null},"A subscription has entered account hold (if enabled).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription in grace period"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionInGracePeriod")),(0,r.kt)("td",{parentName:"tr",align:null},"A subscription has entered grace period (if enabled).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription restarted"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionRestarted")),(0,r.kt)("td",{parentName:"tr",align:null},"User has restored their subscription from Play > Account > Subscriptions. The subscription was canceled but had not expired yet when the user restores.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription price change confirmed"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionPriceChangeConfirmed")),(0,r.kt)("td",{parentName:"tr",align:null},"A subscription price change has successfully been confirmed by the user.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription deferred"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionDeferred")),(0,r.kt)("td",{parentName:"tr",align:null},"A subscription's recurrence time has been extended.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription paused"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionPaused")),(0,r.kt)("td",{parentName:"tr",align:null},"A subscription has been paused.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription pause schedule changed"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionPauseScheduleChanged")),(0,r.kt)("td",{parentName:"tr",align:null},"A subscription pause schedule has been changed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription revoked"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionRevoked")),(0,r.kt)("td",{parentName:"tr",align:null},"A subscription has been revoked from the user before the expiration time.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Subscription expired"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Imdhemy\\Purchases\\Events\\GooglePlay\\SubscriptionExpired")),(0,r.kt)("td",{parentName:"tr",align:null},"A subscription has expired.")))),(0,r.kt)("h3",{id:"how-to-track-refunds-in-google-play"},"How to track refunds in Google Play"),(0,r.kt)("p",null,"There are two ways for a user to ",(0,r.kt)("a",{parentName:"p",href:"https://support.google.com/googleplay/answer/2479637?hl=en"},"request refund"),"\nfor a subscription in Google Play: either by sending a request to Google or\nby contacting the developer."),(0,r.kt)("p",null,"If a user requests a refund from the developer, you as a developer can keep\ntrack of the process. However, if a user requests a refund from Google, you\nwill not receive any notification if the refund is successful or not."),(0,r.kt)("p",null,"From the developers experience, there is an indirect way to track refunds.\nafter a subscription is refunded two real-time events are sent:\n",(0,r.kt)("inlineCode",{parentName:"p"},"SubscriptionCanceled")," followed by ",(0,r.kt)("inlineCode",{parentName:"p"},"SubscriptionRevoked"),"."),(0,r.kt)("p",null,"On your server, you can treat the ",(0,r.kt)("inlineCode",{parentName:"p"},"SubscriptionCanceled")," event as a normal\ncancel, then if that event is followed by a ",(0,r.kt)("inlineCode",{parentName:"p"},"SubscriptionRevoked")," event, you\ncan mark it as a refund."))}u.isMDXComponent=!0}}]);