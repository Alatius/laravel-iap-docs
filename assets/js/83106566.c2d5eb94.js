"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6122],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),l=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},v=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),v=l(r),f=n,d=v["".concat(c,".").concat(f)]||v[f]||u[f]||i;return r?o.createElement(d,a(a({ref:t},p),{},{components:r})):o.createElement(d,a({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=v;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}v.displayName="MDXCreateElement"},2637:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=r(7462),n=(r(7294),r(3905));const i={sidebar_position:1,description:"An overview about server notifications."},a="Overview",s={unversionedId:"server-notifications/overview",id:"server-notifications/overview",title:"Overview",description:"An overview about server notifications.",source:"@site/docs/server-notifications/overview.mdx",sourceDirName:"server-notifications",slug:"/server-notifications/overview",permalink:"/laravel-iap-docs/docs/server-notifications/overview",draft:!1,editUrl:"https://github.com/imdhemy/laravel-iap-docs/blob/master/docs/server-notifications/overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"An overview about server notifications."},sidebar:"tutorialSidebar",previous:{title:"Server Notifications",permalink:"/laravel-iap-docs/docs/category/server-notifications"},next:{title:"App Store Server Notifications",permalink:"/laravel-iap-docs/docs/server-notifications/app-store"}},c={},l=[{value:"Setup instructions",id:"setup-instructions",level:2}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"overview"},"Overview"),(0,n.kt)("p",null,"LIAP supports Google Play Realtime Developer Notifications and App Store\nServer Notifications out of the box. Server notifications is a mechanism to\nreceive push notifications from the service provider (Google Play or Apple)\nwhenever there is a change in user's subscription status. These\nnotifications allow you to immediately react to subscription changes,\navoiding the need to poll the APIs for updates."),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Note that inefficient use of the Google Play Developer API can lead to API\nquota restrictions. So, it is recommended to depend on the server notifications.")),(0,n.kt)("h2",{id:"setup-instructions"},"Setup instructions"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/server-notifications/app-store"},"App Store Server Notifications"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/server-notifications/google-play"},"Google Play Realtime Developer Notifications"),".")))}u.isMDXComponent=!0}}]);